openapi: 3.0.0
info:
  title: CadTI API
  version: 1.0.0
servers:
  - url: http://localhost:3001
tags:
  - name: AltContrato
  - name: Empresas
  - name: Laudos
  - name: Lookup tables
  - name: Procuracoes
  - name: Procuradores
  - name: Seguros
  - name: Socios
  - name: Veiculos
  - name: General requests
  - name: Parametros
  - name: Users
  - name: Avisos
  - name: Solicitações
paths:
  /api/altContrato:
    get:
      tags:
        - AltContrato
      summary: altContrato
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - AltContrato
      summary: altContrato
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                codigoEmpresa: 9060
                numeroAlteracao: '11'
                numeroRegistro: '11'
                numeroSei: '11'
                numeroContrato: '11'
                dataJunta: '2021-12-01'
                vencimentoContrato: '2016-01-13'
                razaoSocial: GONTIJO
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/empresas:
    get:
      tags:
        - Empresas
      summary: getEmpresas
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Empresas
      summary: EDITEmpresas
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                codigo_empresa: 71022
                razao_social: Cool
                email: ''
                cep: '1407'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Empresas
      summary: saveEmpresasAndSocios
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                empresa:
                  razao_social: Whatever LTDA
                  situacao: Ativo
                  cnpj: 17.283.151/0001-05
                  rua: R. JOSE ILDEU GRAMISCELLI ,120 ,LAGOINHA
                  cidade: BELO HORIZONTE
                  uf: MG
                  telefone: 031 34226690
                  email: penhaassessoria@gmail.com
                  numero: ''
                  complemento: ''
                  bairro: null
                  cep: '31210190'
                socios:
                  - nome_socio: '88'
                    cpf_socio: '88'
                    tel_socio: '(88) '
                    email_socio: '88'
                    share: '88'
                  - nome_socio: '87'
                    cpf_socio: '87'
                    tel_socio: '(87) '
                    email_socio: '87'
                    share: '87'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/laudos:
    get:
      tags:
        - Laudos
      summary: getLaudos
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Laudos
      summary: ADDLaudo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: '660011'
                codigo_empresa: 9038
                empresa_id: 12
                veiculo_id: 3419
                validade: '2022-12-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/seguros:
    put:
      tags:
        - Seguros
      summary: EDITSeguros
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                update:
                  id: 173
                  apolice: '1002899967'
                  seguradora_id: 2
                  situacao: Damn!
                  vencimento: '2022-12-31'
                vehicleIds:
                  - 3418
                deletedVehicleIds:
                  - 3419
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Seguros
      summary: getSeguros
      parameters:
        - name: apolice
          in: query
          schema:
            type: integer
          example: '1002306095102'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Seguros
      summary: ADDSeguro
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                apolice: '660011'
                codigo_empresa: 9038
                seguradora_id: 12
                data_emissao: '2022-12-01'
                vencimento: '2022-12-31'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/delete:
    delete:
      tags:
        - General requests
      summary: deleteAny
      parameters:
        - name: codigoEmpresa
          in: query
          schema:
            type: integer
          example: '9029'
        - name: table
          in: query
          schema:
            type: string
          example: socios
        - name: tablePK
          in: query
          schema:
            type: string
          example: socio_id
        - name: id
          in: query
          schema:
            type: integer
          example: '313'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/acessibilidade:
    get:
      tags:
        - Lookup tables
      summary: lookupTables
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, PUT, OPTIONS, DELETE, GET
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
                example: 'true'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '855'
            ETag:
              schema:
                type: string
                example: W/"357-JNgTtxwDmqKV3BiiZGey2MIKs5w"
            Date:
              schema:
                type: string
                example: Thu, 30 Mar 2023 20:42:17 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 2
                  item: Banheiro
                - id: 3
                  item: Bar
                - id: 4
                  item: Bebedouro
                - id: 5
                  item: Cabine separada motorista
                - id: 6
                  item: Câmera
                - id: 7
                  item: Cafeteira elétrica
                - id: 8
                  item: Caixa térmica
                - id: 9
                  item: Carregador de celular
                - id: 10
                  item: Cofre
                - id: 11
                  item: Cortinas
                - id: 12
                  item: Descanso de pernas
                - id: 13
                  item: DVD
                - id: 14
                  item: Geladeira
                - id: 15
                  item: Lixeira
                - id: 16
                  item: Mesa de jogos
                - id: 17
                  item: Monitor DVD
                - id: 18
                  item: Rádio
                - id: 19
                  item: Roleta
                - id: 20
                  item: Som ambiente
                - id: 21
                  item: Televisão
                - id: 22
                  item: Validador
                - id: 23
                  item: Vídeo cassete
                - id: 24
                  item: Wi-fi
                - id: 25
                  item: Radiofone
                - id: 26
                  item: Cinto de Segurança
                - id: 27
                  item: Climatizador
                - id: 30
                  item: Lalala
                - id: 1
                  item: Ar condicionado
  /api/equipamentos:
    get:
      tags:
        - Lookup tables
      summary: lookupTables
      description: >-
        StartFragment


        As tabelas lookup são: modelosChassi, modeloCarroceria, carrocerias,
        equipamentos, seguradoras, empresasLaudo e acessibilidade.


        Os objetos "request body" dos métodos PUT e POST variam conforme a
        estrutura de cada tabela (ver diagrama de entidades em docs).


        EndFragment
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          example: '20'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, PUT, OPTIONS, DELETE, GET
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
                example: 'true'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '33'
            ETag:
              schema:
                type: string
                example: W/"21-jZYmg1secAJF7rdMocFa8oekjUY"
            Date:
              schema:
                type: string
                example: Thu, 30 Mar 2023 21:18:07 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 20
                  item: Som ambiente
  /api/modelosChassi:
    get:
      tags:
        - Lookup tables
      summary: lookupTables
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/empresasLaudo:
    get:
      tags:
        - Lookup tables
      summary: lookupTables
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/seguradoras/14:
    get:
      tags:
        - Lookup tables
      summary: GETSeguradoras
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/addElement:
    post:
      tags:
        - Lookup tables
      summary: addElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                table: modelo_carroceria
                requestElement:
                  marca_id: 2
                  modelo: AAAAAARGH!
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/editElements:
    put:
      tags:
        - Lookup tables
      summary: editElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                table: equipamentos
                tablePK: id
                id: 30
                item: ABA
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/procuracoes/57:
    get:
      tags:
        - Procuracoes
      summary: getProcuracoes
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/procuracoes/74:
    get:
      tags:
        - Procuracoes
      summary: getOneProcuracao
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/procuracoes:
    post:
      tags:
        - Procuracoes
      summary: addProcuracoes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                codigo_empresa: 9060
                status: vigente
                procuradores:
                  - 13
                  - 15
                  - 31
                  - 32
                  - 47
                  - 48
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Procuracoes
      summary: deleteProcuracao
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          example: '90'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/procuradores:
    get:
      tags:
        - Procuradores
      summary: GETProcuradores
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Procuradores
      summary: ADDProcuradores
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                procuradores:
                  - nome_procurador: abcZz
                    cpf_procurador: '1234'
                    tel_procurador: '5678'
                    email_procurador: a@b.c
                    empresas:
                      - 9030
                  - nome_procurador: defZz
                    cpf_procurador: '9874'
                    tel_procurador: 31 987654321
                    empresas:
                      - 9030
                codigoEmpresa: 9030
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Procuradores
      summary: EDITProcuradores
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                table: procuradores--DontNeed
                tablePK: procurador_id--AlsoDont
                procuradores:
                  - procurador_id: 49
                    nome_procurador: abcEFk00
                    tel_procurador: '001122330445'
                    empresas:
                      - 9030
                      - 9060
                  - procurador_id: 50
                    nome_procurador: AnnaAahZZ
                    email_procurador: Aan@lepard.com
                    empresas:
                      - 9030
                codigoEmpresa: 9030
                keys: Some garbage
                empresas: '[codEmpresa] --> REFACTOR frontEnd'
                updateUserPermission: REFACTOR frontEnd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/procuradores/50,56:
    get:
      tags:
        - Procuradores
      summary: FINDProcuradorCPF
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/upcomingInsurances:
    post:
      tags:
        - Seguros
      summary: ADDUpcomingSeguro
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                apolice: '99993'
                seguradora_id: 3
                codigo_empresa: 70008
                data_emissao: '2023-01-15'
                vencimento: '2023-01-12'
                situacao: Vigente
                veiculos:
                  - 3290
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/socios:
    get:
      tags:
        - Socios
      summary: GETSocios
      parameters:
        - name: socio_id
          in: query
          schema:
            type: string
          example: 314,340
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Socios
      summary: ADDSocios
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                codigo_empresa: 9060
                socios:
                  - cpf_socio: 12.000-34
                    nome_socio: Aabdhul Mohamed
                    codigo_empresa: 9060
                    email_socio: aammh@whatever.com
                    tel_socio: 31 98801-5432
                    share: 22
                  - cpf_socio: 19.555.000
                    nome_socio: AABRAHAM LINCOLN
                    codigo_empresa: 9060
                    email_socio: null
                    share: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Socios
      summary: EDITsocios
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                socios:
                  - socioId: 296
                    cpfSocio: 546.471.429-49
                    outsider: true
                    share: 15
                    empresas:
                      - codigoEmpresa: 71021
                        share: 35
                codigoEmpresa: 9060
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Socios
      summary: deleteSocio
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          example: '90'
        - name: codigoEmpresa
          in: query
          schema:
            type: integer
          example: '9029'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/checkSocios:
    post:
      tags:
        - Socios
      summary: checkSocios
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                newCpfs:
                  - 129.772.686-34
                  - 051.423.966-26
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/veiculos:
    get:
      tags:
        - Veiculos
      summary: getVeiculos
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Veiculos
      summary: ADDVeiculo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                placa: AAA-0001
                utilizacao: Comercial
                ano_chassi: '2015'
                ano_carroceria: '2016'
                dominio: Veículo próprio
                cores: SRN
                cilindros: '5'
                potencia: '5'
                eixos: '5'
                pneumaticos_dianteiro: '5'
                pneumaticos_traseiro: '5'
                peso_dianteiro: '2'
                peso_traseiro: '2'
                poltronas: '30'
                piques_poltrona: '4'
                codigo_empresa: 9060
                situacao: Cadastro solicitado
                pbt: 6.4
                modelo_chassi_id: 5
                modelo_carroceria_id: 109
                equipamentos_id:
                  - 1
                  - 4
                  - 8
                acessibilidade_id:
                  - 1
                  - 2
                  - 10
                apolice: Seguro não cadastrado
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Veiculos
      summary: updateVeiculo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                veiculo_id: '3420'
                situacao: For sure!
                acessibilidade_id:
                  - 1
                  - 2
                  - 10
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/checkVehicleExistence:
    get:
      tags:
        - Veiculos
      summary: vehicleExists
      parameters:
        - name: placa
          in: query
          schema:
            type: string
          description: regular vehicle search
          example: RNU-5A44
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, PUT, OPTIONS, DELETE, GET
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
                example: 'true'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '102'
            ETag:
              schema:
                type: string
                example: W/"66-t/YOTkI8vH5ISimWs5f96Bvs3+Y"
            Date:
              schema:
                type: string
                example: Thu, 08 Dec 2022 16:31:40 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                vehicleFound:
                  veiculoId: 3415
                  placa: RNU-5A44
                  situacao: Seguro vencido
                status: existing
  /api/getOldVehicles:
    get:
      tags:
        - Veiculos
      summary: getOldVehicle
      parameters:
        - name: placa
          in: query
          schema:
            type: string
          example: GLH-4313
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/allVehicles:
    get:
      tags:
        - Veiculos
      summary: getAllVehicles
      parameters:
        - name: codigoEmpresa
          in: query
          schema:
            type: integer
          example: '9066'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, PUT, OPTIONS, DELETE, GET
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
                example: 'true'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1237'
            ETag:
              schema:
                type: string
                example: W/"4d5-eotMb1cobQQtYckZlL7Olkuf7Zg"
            Date:
              schema:
                type: string
                example: Fri, 09 Dec 2022 02:01:56 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                - veiculo_id: 261
                  placa: GXS-3850
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 262
                  placa: GXS-3851
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 1443
                  placa: HJD-4901
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 2815
                  placa: QQC-8883
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 2814
                  placa: QQC-7175
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 2811
                  placa: QQC-1203
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 2812
                  placa: QQC-1186
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: null
                - veiculo_id: 542
                  placa: GXS-4041
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: LOPES E FILHOS LTDA
                - veiculo_id: 543
                  placa: GXS-4042
                  codigo_empresa: 9066
                  empresa: TRANSPORTADORA BELA VISTA DE MINAS LTDA
                  compartilhado: LOPES E FILHOS LTDA
  /api/reactivateVehicle:
    patch:
      tags:
        - Veiculos
      summary: reactivateVehicle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                placa: GLH4313
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/baixaVeiculo:
    patch:
      tags:
        - Veiculos
      summary: baixaVeiculo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                placa: GLH4313
                Situação: Baixado
                Motivo da Baixa: IDADE
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/checkIfExists:
    get:
      tags:
        - General requests
      summary: checkIfElementExists
      parameters:
        - name: table
          in: query
          schema:
            type: string
          example: empresas
        - name: column
          in: query
          schema:
            type: string
          example: cnpj
        - name: value
          in: query
          schema:
            type: string
          example: 03.308.232/0001-08
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/empresaUpload:
    post:
      tags:
        - General requests
      summary: uploadEmpresaFiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                metadata:
                  type: string
                  example: |-
                    {
                            "fieldName" : "apoliceDoc",
                            "apolice" : "111",
                            "empresaId" : 9066,
                            "tempFile" : false
                        }
                files:
                  type: string
                  format: binary
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: mengo
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/vehicleUpload:
    post:
      tags:
        - General requests
      summary: uploadVehicleFiles
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                CRLV do Veículo:
                  type: string
                  format: binary
                Declaração de Responsabilidade:
                  type: string
                Certificado de Vistoria:
                  type: string
                Laudo de Pesagem:
                  type: string
                Nota Fiscal Carroceria:
                  type: string
                Nota Fiscal Chassi:
                  type: string
                Layout do Veículo:
                  type: string
                Contrato', name:
                  type: string
                Outros Anexos':
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/parametros:
    get:
      tags:
        - Parametros
      summary: getParamentros
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/getUser:
    get:
      tags:
        - Users
      summary: getUser
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    get:
      tags:
        - Users
      summary: getUsers
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Users
      summary: addUsers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: wtver Fker
                cpf: '9876540999'
                email: 456@aslYY
                role: empresa
                empresas:
                  - 9060
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Avisos
      summary: editUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 638f46caeade3b32c00bbf59
                name: wtver| TOO
                cpf: '9876540'
                email: 456@asl
                role: tecnico
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/avisos:
    get:
      tags:
        - Avisos
      summary: getAvisos
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Avisos
      summary: addUsers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: wtver Fker
                cpf: '9876540'
                email: 456@asl
                role: tecnico
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/avisos/changeReadStatus:
    patch:
      tags:
        - Avisos
      summary: changeReadStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cpf: 012.345.678-90
                messagesRead:
                  - 62aa9d7843ae6cdf0179356e
                  - 62a7fa7643ae6cdf01793568
                  - 623a8df8d781e4a588fe48b0
                  - 61a988f4f499d6118472850c
                  - 617187d717e841cbfc608d09
                  - 6161c6aefa57f215e40e6df5
                  - 614bb7ec167d410a8013cd79
                  - 612e4f9773d1bb338c153ad3
                  - 612d8766409c8411983611a5
                  - 612d8764409c8411983611a4
                  - 60f0e9dcceaf792a3c873e78
                id: 6387a78a43733d18a0d44864
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/logs:
    get:
      tags:
        - Solicitações
      summary: getSolicitaoes
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Solicitações
      summary: addSolicitacoes_DONE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                collection: logs
                codigoEmpresa: 9060
                log:
                  completed: false
                  history:
                    - newMembers:
                        - nomeProcurador: asd
                          cpfProcurador: '123'
                          telProcurador: (12) 2
                          emailProcurador: '12'
                      oldMembers: []
                      expires: false
                      user: Amdmin User
                      createdAt: '2022-12-19T12:44:17.242Z'
                      action: Pendências encontradas
                  status: Pendências
                  empresaId: 9060
                  subject: Cadastro de procurações/procuradores
                  id: 63bca84e5576a72ac4082843
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Solicitações
      summary: editSolicitacoes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                collection: logs
                codigoEmpresa: 9060
                log:
                  completed: false
                  history:
                    - newMembers:
                        - nomeProcurador: asd
                          cpfProcurador: '123'
                          telProcurador: (12) 2
                          emailProcurador: '12'
                      oldMembers: []
                      expires: false
                      user: Amdmin User
                      createdAt: '2022-12-19T12:44:17.242Z'
                      action: Pendências encontradas
                  status: Pendências
                  empresaId: 9060
                  subject: Cadastro de procurações/procuradores
                  id: 63bca84e5576a72ac4082843
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
